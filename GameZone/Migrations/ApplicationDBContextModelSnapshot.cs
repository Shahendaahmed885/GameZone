// <auto-generated />
using GameZone.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameZone.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameZone.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "sports"
                        },
                        new
                        {
                            Id = 2,
                            Name = "action"
                        },
                        new
                        {
                            Id = 3,
                            Name = "adventure"
                        },
                        new
                        {
                            Id = 4,
                            Name = "racing"
                        },
                        new
                        {
                            Id = 5,
                            Name = "fighting"
                        },
                        new
                        {
                            Id = 6,
                            Name = "film"
                        });
                });

            modelBuilder.Entity("GameZone.Models.Devices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "playstation",
                            icon = "bi bi-playstation"
                        },
                        new
                        {
                            Id = 2,
                            Name = "xbox",
                            icon = "bi bi-xbox"
                        },
                        new
                        {
                            Id = 3,
                            Name = "nintendo switch",
                            icon = "bi bi-nintendo-switch"
                        },
                        new
                        {
                            Id = 4,
                            Name = "pc",
                            icon = "bi bi-display"
                        });
                });

            modelBuilder.Entity("GameZone.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("categoryid")
                        .HasColumnType("int");

                    b.Property<string>("cover")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.HasKey("Id");

                    b.HasIndex("categoryid");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameZone.Models.Gamedevices", b =>
                {
                    b.Property<int>("gameid")
                        .HasColumnType("int");

                    b.Property<int>("devicesid")
                        .HasColumnType("int");

                    b.HasKey("gameid", "devicesid");

                    b.HasIndex("devicesid");

                    b.ToTable("gamedevices");
                });

            modelBuilder.Entity("GameZone.Models.Game", b =>
                {
                    b.HasOne("GameZone.Models.Category", "category")
                        .WithMany("games")
                        .HasForeignKey("categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("GameZone.Models.Gamedevices", b =>
                {
                    b.HasOne("GameZone.Models.Devices", "devices")
                        .WithMany()
                        .HasForeignKey("devicesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameZone.Models.Game", "game")
                        .WithMany("devices")
                        .HasForeignKey("gameid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("devices");

                    b.Navigation("game");
                });

            modelBuilder.Entity("GameZone.Models.Category", b =>
                {
                    b.Navigation("games");
                });

            modelBuilder.Entity("GameZone.Models.Game", b =>
                {
                    b.Navigation("devices");
                });
#pragma warning restore 612, 618
        }
    }
}
